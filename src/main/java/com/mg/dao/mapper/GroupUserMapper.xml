<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mg.dao.GroupUserMapper" >
  <resultMap id="BaseResultMap" type="com.mg.model.GroupUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="group_id" property="groupId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="user_type_in_group" property="userTypeInGroup" jdbcType="INTEGER" />
    <result column="join_time" property="joinTime" jdbcType="TIMESTAMP" />
    <result column="user_nickname" property="userNickname" jdbcType="VARCHAR" />
    <result column="speak_amount" property="speakAmount" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, group_id, user_id, user_type_in_group, join_time, user_nickname, speak_amount
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from group_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from group_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mg.model.GroupUser" >
    insert into group_user (id, group_id, user_id, 
      user_type_in_group, join_time, user_nickname, 
      speak_amount)
    values (#{id,jdbcType=INTEGER}, #{groupId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{userTypeInGroup,jdbcType=INTEGER}, #{joinTime,jdbcType=TIMESTAMP}, #{userNickname,jdbcType=VARCHAR}, 
      #{speakAmount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.mg.model.GroupUser" >
    insert into group_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="groupId != null" >
        group_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userTypeInGroup != null" >
        user_type_in_group,
      </if>
      <if test="joinTime != null" >
        join_time,
      </if>
      <if test="userNickname != null" >
        user_nickname,
      </if>
      <if test="speakAmount != null" >
        speak_amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="groupId != null" >
        #{groupId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userTypeInGroup != null" >
        #{userTypeInGroup,jdbcType=INTEGER},
      </if>
      <if test="joinTime != null" >
        #{joinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userNickname != null" >
        #{userNickname,jdbcType=VARCHAR},
      </if>
      <if test="speakAmount != null" >
        #{speakAmount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mg.model.GroupUser" >
    update group_user
    <set >
      <if test="groupId != null" >
        group_id = #{groupId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userTypeInGroup != null" >
        user_type_in_group = #{userTypeInGroup,jdbcType=INTEGER},
      </if>
      <if test="joinTime != null" >
        join_time = #{joinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userNickname != null" >
        user_nickname = #{userNickname,jdbcType=VARCHAR},
      </if>
      <if test="speakAmount != null" >
        speak_amount = #{speakAmount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mg.model.GroupUser" >
    update group_user
    set group_id = #{groupId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      user_type_in_group = #{userTypeInGroup,jdbcType=INTEGER},
      join_time = #{joinTime,jdbcType=TIMESTAMP},
      user_nickname = #{userNickname,jdbcType=VARCHAR},
      speak_amount = #{speakAmount,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>